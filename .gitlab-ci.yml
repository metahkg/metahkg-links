lint:
  image: node:latest
  script:
    - git checkout $CI_COMMIT_BRANCH
    - yarn install
    - yarn lint
    - git config user.name metahkg-bot
    - git config user.email bot@metahkg.org
    - git commit -a -m lint || exit 0
    - git remote set-url origin https://wcyat:$gitlab_token@gitlab.com/metahkg/metahkg-links.git
    - git push origin $CI_COMMIT_BRANCH
  rules:
    - if: $CI_COMMIT_AUTHOR != "metahkg-bot <bot@metahkg.org>"

docker-build:
  # Use the official docker image.
  image: docker:latest
  stage: build
  services:
    - docker:dind
  before_script:
    - apk add nodejs-current
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  # Default branch leaves tag empty (= latest tag)
  # All other branches are tagged with the escaped branch name (commit ref slug)
  script:
    - docker build --build-arg REACT_APP_build=$CI_COMMIT_SHORT_SHA --pull -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest" -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA" -t "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$(node -e 'console.log(require("./package.json").version)')" .
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:latest"
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$CI_COMMIT_SHORT_SHA"
    - docker push "$CI_REGISTRY_IMAGE/$CI_COMMIT_BRANCH:$(node -e 'console.log(require("./package.json").version)')"
  # Run this job in a branch where a Dockerfile exists
  rules:
    - if: $CI_COMMIT_BRANCH
      exists:
        - Dockerfile

include:
  - template: Auto-DevOps.gitlab-ci.yml

sast:
  stage: test
